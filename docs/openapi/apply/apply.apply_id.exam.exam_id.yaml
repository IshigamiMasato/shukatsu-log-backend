get:
  summary: 試験詳細取得
  tags:
    - apply
    - exam
  parameters:
    - name: apply_id
      in: path
      required: true
      schema:
        type: integer
    - name: exam_id
      in: path
      required: true
      schema:
        type: integer
  responses:
    "200":
      content:
        application/json:
          schema:
            $ref: "#components/schemas/Exam"
          example:
            {
              "exam_id": 1,
              "apply_id": 1,
              "exam_date": "2025-01-01",
              "content": "試験内容試験内容",
              "memo": "メモメモメモ",
              "created_at": "2025-01-01 12:34:56",
              "updated_at": "2025-01-01 12:34:56",
            }
    "401":
      content:
        application/json:
          schema:
            $ref: "#components/schemas/UnauthorizedResponse"
          example:
            {
              "code": "UNAUTHORIZED"
            }
    "404":
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              code:
                type: string
                enum:
                  - USER_NOT_FOUND
                  - APPLY_NOT_FOUND
                  - EXAM_NOT_FOUND
                description: |
                  エラーコード:
                  - `USER_NOT_FOUND`: ユーザ情報が存在しない
                  - `APPLY_NOT_FOUND`: 応募情報が存在しない
                  - `EXAM_NOT_FOUND`: 試験情報が存在しない
            required:
              - code
          example:
            {
              "code": "USER_NOT_FOUND"
            }
    "500":
      content:
        application/json:
          schema:
            $ref: "#components/schemas/InternalServerErrorResponse"
          example:
            {
              "code": "INTERNAL_SERVER_ERROR"
            }
  security:
    - BearerAuth: []

put:
  summary: 試験情報更新
  tags:
    - apply
    - exam
  parameters:
    - name: apply_id
      in: path
      required: true
      schema:
        type: integer
    - name: exam_id
      in: path
      required: true
      schema:
        type: integer
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          additionalProperties: false
          properties:
            exam_date:
              type: string
              pattern: "^\\d{4}-\\d{2}-\\d{2}$"
              description: 試験日
            content:
              type: string
              description: 試験内容
            memo:
              type: string
              description: メモ
          required:
            - exam_date
            - content
        example:
          {
            "exam_date": "2025-01-01",
            "content": "試験内容試験内容",
            "memo": "メモメモメモ",
          }
  responses:
    "200":
      content:
        application/json:
          schema:
            $ref: "#components/schemas/Exam"
          example:
            {
              "exam_id": 1,
              "apply_id": 1,
              "exam_date": "2025-01-01",
              "content": "試験内容試験内容",
              "memo": "メモメモメモ",
              "created_at": "2025-01-01 12:34:56",
              "updated_at": "2025-01-01 12:34:56",
            }
    "400":
      content:
        application/json:
          schema:
            $ref: "#components/schemas/BadRequestResponse"
          example:
            {
              "code": "BAD_REQUEST",
              "errors": {
                "exam_date": ["試験日は、必ず指定してください。"]
              }
            }
    "401":
      content:
        application/json:
          schema:
            $ref: "#components/schemas/UnauthorizedResponse"
          example:
            {
              "code": "UNAUTHORIZED"
            }
    "404":
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              code:
                type: string
                enum:
                  - USER_NOT_FOUND
                  - APPLY_NOT_FOUND
                  - EXAM_NOT_FOUND
                description: |
                  エラーコード:
                  - `USER_NOT_FOUND`: ユーザ情報が存在しない
                  - `APPLY_NOT_FOUND`: 応募情報が存在しない
                  - `EXAM_NOT_FOUND`: 試験情報が存在しない
            required:
              - code
          example:
            {
              "code": "USER_NOT_FOUND"
            }
    "500":
      content:
        application/json:
          schema:
            $ref: "#components/schemas/InternalServerErrorResponse"
          example:
            {
              "code": "INTERNAL_SERVER_ERROR"
            }
  security:
    - BearerAuth: []

delete:
  summary: 試験情報削除
  tags:
    - apply
    - exam
  parameters:
    - name: apply_id
      in: path
      required: true
      schema:
        type: integer
    - name: exam_id
      in: path
      required: true
      schema:
        type: integer
  responses:
    "200":
      content:
        application/json:
          schema:
            $ref: "#components/schemas/Exam"
          example:
            {
              "exam_id": 1,
              "apply_id": 1,
              "exam_date": "2025-01-01",
              "content": "試験内容試験内容",
              "memo": "メモメモメモ",
              "created_at": "2025-01-01 12:34:56",
              "updated_at": "2025-01-01 12:34:56",
            }
    "401":
      content:
        application/json:
          schema:
            $ref: "#components/schemas/UnauthorizedResponse"
          example:
            {
              "code": "UNAUTHORIZED"
            }
    "404":
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              code:
                type: string
                enum:
                  - USER_NOT_FOUND
                  - APPLY_NOT_FOUND
                  - EXAM_NOT_FOUND
                description: |
                  エラーコード:
                  - `USER_NOT_FOUND`: ユーザ情報が存在しない
                  - `APPLY_NOT_FOUND`: 応募情報が存在しない
                  - `EXAM_NOT_FOUND`: 試験情報が存在しない
            required:
              - code
          example:
            {
              "code": "USER_NOT_FOUND"
            }
    "500":
      content:
        application/json:
          schema:
            $ref: "#components/schemas/InternalServerErrorResponse"
          example:
            {
              "code": "INTERNAL_SERVER_ERROR"
            }
  security:
    - BearerAuth: []
