get:
  summary: ユーザ情報取得
  tags:
    - user
  responses:
    "200":
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              user_id:
                type: integer
                description: ユーザID
              name:
                type: string
                description: ユーザ名
              email:
                type: string
                format: email
                description: メールアドレス
              created_at:
                type: string
                pattern: "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$"
                description: "作成日（フォーマット: `YYYY-MM-DD HH:mm:ss`）"
              updated_at:
                type: string
                pattern: "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$"
                description: "更新日（フォーマット: `YYYY-MM-DD HH:mm:ss`）"
            required:
              - user_id
              - name
              - email
          example:
            {
              "user_id": 1,
              "name": "佐藤一郎",
              "email": "tes@tes.com",
              "created_at": "2025-01-01 12:34:56",
              "updated_at": "2025-01-01 12:34:56",
            }
    "401":
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              code:
                type: string
                enum:
                  - UNAUTHORIZED
                  - EXPIRED_TOKEN
                description: |
                  エラーコード:
                  - `UNAUTHORIZED`: 認証情報が無効
                  - `EXPIRED_TOKEN`: トークンの有効期限が切れている
            required:
              - code
          example:
            {
              "code": "UNAUTHORIZED"
            }
    "404":
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              code:
                type: string
                enum:
                  - USER_NOT_FOUND
                description: |
                  エラーコード:
                  - `USER_NOT_FOUND`: ユーザ情報が存在しない
            required:
              - code
          example:
            {
              "code": "USER_NOT_FOUND"
            }
    "500":
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              code:
                type: string
                enum:
                  - INTERNAL_SERVER_ERROR
                description: |
                  エラーコード:
                  - `INTERNAL_SERVER_ERROR`: 予期せぬエラー
            required:
              - code
          example:
            {
              "code": "INTERNAL_SERVER_ERROR"
            }
  security:
    - BearerAuth: []
